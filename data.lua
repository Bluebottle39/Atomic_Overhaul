require("__Atomic_Overhaul__/lib/core")

require("prototypes/group")
require(fluids .. "waste-solution")
require(items .. "empty-fuel-cell")
require(items .. "graphite-depleted-cell")
require(items .. "graphite-fuel-cell")
require(items .. "graphite")
require(items .. "MOX-depleted-cell")
require(items .. "MOX-fuel-cell")
require(items .. "MOX")
require(items .. "nuclear-waste")
require(items .. "plutonium-depleted-cell")
require(items .. "plutonium-fuel-cell")
require(items .. "plutonium-fuel")
require(items .. "plutonium")
require(items .. "research-data")
require(items .. "thorium-depleted-cell")
require(items .. "thorium-fuel-cell")
require(items .. "thorium-module-1")
require(items .. "thorium-module-2")
require(items .. "thorium-module-3")
require(items .. "thorium")
require(recipes .. "empty-fuel-cell-recipe")
require(recipes .. "graphite-fuel-cell-recipe")
require(recipes .. "graphite-fuel-cell-recipe")
require(recipes .. "graphite-fuel-reprocessing")
require(recipes .. "graphite-recipe")
require(recipes .. "MOX-fuel-cell-recipe")
require(recipes .. "MOX-fuel-reprocessing")
require(recipes .. "MOX-recipe")
require(recipes .. "MOX-without-research-data")
require(recipes .. "plutonium-fuel-cell-recipe")
require(recipes .. "plutonium-fuel-recipe")
require(recipes .. "plutonium-fuel-reprocessing")
require(recipes .. "plutonium-without-research-data")
require(recipes .. "research-data")
require(recipes .. "thorium-fuel-cell-recipe")
require(recipes .. "thorium-fuel-reprocessing")
require(recipes .. "thorium-module-1")
require(recipes .. "thorium-module-2")
require(recipes .. "thorium-module-3")
require(recipes .. "thorium-recipe")
require(recipes .. "uranium-without-research-data")
require(recipes .. "waste-liquefaction")
require(recipes .. "waste-solution-reprocessing")
require(techs .. "graphite-fuel-reprocessing")
require(techs .. "graphite-processing")
require(techs .. "plutonium-fuel-reprocessing")
require(techs .. "plutonium-fuel")
require(techs .. "plutonium-processing")
require(techs .. "plutonium-without-research-data")
require(techs .. "MOX-fuel-reprocessing")
require(techs .. "MOX-processing")
require(techs .. "MOX-without-research-data")
require(techs .. "thorium-fuel-reprocessing")
require(techs .. "thorium-module-1")
require(techs .. "thorium-module-2")
require(techs .. "thorium-module-3")
require(techs .. "thorium-processing")
require(techs .. "uranium-without-research-data")
require(techs .. "waste-reprocessing")

if settings.startup["old-graphite-fuel"].value == false then
    require(items .. "non-moderated-fuel-cell")
    require(items .. "non-moderated-depleted-cell")
    require(items .. "heat-furnace")
    require(recipes .. "non-moderated-fuel-cell-recipe")
    require(recipes .. "non-moderated-fuel-reprocessing")
    require(recipes .. "graphite-furnace-recipe")
    require(recipes .. "heat-furnace-recipe")
    require(techs .. "non-moderated-fuel-processing")
    require(techs .. "non-moderated-fuel-reprocessing")
    require(techs .. "graphite-cooking")
    require(entities .. "heat-furnace")

    --require(recipes .. "plate-heat-recipe")
end

if settings.startup["thorium-wrd"].value == true then
    require(recipes .. "thorium-without-research-data")
    require(techs .. "thorium-without-research-data")
end

if mods["informatron"] then
    -- style_name, filename, width, height -- style_name MUST be a completely unique name
    informatron_make_image("header", images .. "logo.png", 800, 250)
    informatron_make_image("graphite", images .. "graphite.png", 64, 64)
    informatron_make_image("uranium", images .. "uranium.png", 64, 64)
    informatron_make_image("plutonium", images .. "plutonium.png", 64, 64)
    informatron_make_image("MOX", images .. "MOX.png", 64, 64)
    informatron_make_image("thorium", images .. "thorium.png", 64, 64)
    informatron_make_image("Space_Reactor", images .. "Space_Reactor.png", 302, 318)
    informatron_make_image("iridium", images .. "iridium.png", 64, 64)
    informatron_make_image("holmium", images .. "holmium.png", 64, 64)
    informatron_make_image("beryllium", images .. "beryllium.png", 64, 64)
    informatron_make_image("glow_1", images .. "glow.png", 243, 100)
end
